{"version":3,"sources":["App.js","index.js"],"names":["App","useState","data","setData","number","setNumber","previousValue","useRef","useEffect","fetchData","fetch","res","json","results","current","map","item","index","className","src","picture","large","name","title","first","last","style","textTransform","gender","dob","age","location","city","state","country","email","phone","cell","onClick","previous","rootElement","document","getElementById","createRoot","render"],"mappings":"kLAEe,SAASA,IACtB,MAAwBC,mBAAS,IAAG,mBAA7BC,EAAI,KAAEC,EAAO,KACpB,EAA4BF,mBAAS,GAAE,mBAAhCG,EAAM,KAAEC,EAAS,KAClBC,EAAgBC,iBAAO,MAY7B,OAVAC,qBAAU,WACR,IAAMC,EAAS,iDAAG,kHACEC,MAAM,6BAA6B,KAAD,EAA3C,OAAHC,EAAG,gBACiBA,EAAIC,OAAO,KAAD,WAA5BC,EAAO,EAAPA,QACRV,EAAQU,GACRP,EAAcQ,QAAUV,EAAO,2CAChC,kBALc,mCAMfK,GACF,GAAG,CAACL,IAGF,qCACE,8CACCF,EAAKa,KAAI,SAACC,EAAMC,GACf,OACE,mCACE,sBAAKC,UAAU,OAAM,UACnB,qBAAKC,IAAKH,EAAKI,QAAQC,QACvB,+BACGL,EAAKM,KAAKC,MAAK,IAAGP,EAAKM,KAAKE,MAAK,IAAGR,EAAKM,KAAKG,QAEjD,oBAAGC,MAAO,CAAEC,cAAe,cAAe,UACvCX,EAAKY,OAAM,MAAKZ,EAAKa,IAAIC,IAAG,QAE/B,8BACE,4CACCd,EAAKe,SAASC,KAAI,IAAE,6CAAyB,IAC7ChB,EAAKe,SAASE,MAAK,IAAE,+CACrBjB,EAAKe,SAASG,WAEjB,wCAAYlB,EAAKmB,SACjB,8CACanB,EAAKoB,MAAK,MAAKpB,EAAKqB,QAGjC,wBAAQC,QAAS,kBAAMjC,GAAU,SAACkC,GAAQ,OAAKA,EAAW,CAAC,GAAC,EAAC,oBAnBpCtB,IAyBjC,MAGN,CC9CA,IAAMuB,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAU,UACT,cAAC5C,EAAG,M","file":"static/js/main.2a49ab27.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\nexport default function App() {\n  const [data, setData] = useState([]);\n  const [number, setNumber] = useState(0);\n  const previousValue = useRef(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await fetch(\"https://randomuser.me/api\");\n      const { results } = await res.json();\n      setData(results);\n      previousValue.current = number;\n    };\n    fetchData();\n  }, [number]);\n\n  return (\n    <>\n      <h2> Random User</h2>\n      {data.map((item, index) => {\n        return (\n          <>\n            <div className=\"card\" key={index}>\n              <img src={item.picture.large} />\n              <h3>\n                {item.name.title} {item.name.first} {item.name.last}\n              </h3>\n              <p style={{ textTransform: \"capitalize\" }}>\n                {item.gender} ( {item.dob.age} )\n              </p>\n              <p>\n                <strong>City :</strong>\n                {item.location.city} <strong>State :</strong>{\" \"}\n                {item.location.state} <strong>Country :</strong>\n                {item.location.country}\n              </p>\n              <p>&#9993; {item.email}</p>\n              <p>\n                &#128222; {item.phone} | {item.cell}\n              </p>\n\n              <button onClick={() => setNumber((previous) => previous + 1)}>\n                next\n              </button>\n            </div>\n          </>\n        );\n      })}\n    </>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}